{"version":3,"sources":["app/localStorage.js","app/groceryListSlice.js","app/recipeListSlice.js","app/oneTimeListSlice.js","app/store.js","components/recipes/RecipesListItem.js","app/appDataScripts.js","components/shared/Footer.js","components/recipes/RecipesPage.js","components/home/HomeListItem.js","components/home/HomePage.js","components/shared/AdminLinks.js","components/shared/OneTimeItem.js","components/shared/Header.js","components/all-items/AllItemsListItem.js","components/all-items/AllItemsPage.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["loadStorage","type","serializedState","localStorage","getItem","JSON","parse","err","saveStorage","state","stringify","setItem","stateFromLocalStorage","groceryListSlice","createSlice","name","initialState","undefined","reducers","toggle","action","payload","checked","filter","id","push","add","remove","removeAll","actions","selectGroceryList","groceryList","recipeListSlice","addRecipe","removeRecipe","removeAllRecipes","selectRecipeList","recipeList","oneTimeListSlice","addItem","removeItem","removeAllItems","selectOneTimeList","oneTimeList","store","configureStore","reducer","groceryListReducer","recipeListReducer","oneTimeListReducer","RecipesListItem","recipe","ID","dispatch","useDispatch","useSelector","groceriesState","isChecked","find","ListItem","button","ListItemText","primary","Switch","color","onChange","event","target","items","forEach","gId","g","getGroceries","allData","getRecipies","useStyles","makeStyles","root","width","position","bottom","background","Footer","classes","groceryState","recipeState","oneTimeState","BottomNavigation","showLabels","className","BottomNavigationAction","onClick","label","icon","clear","RECIPES","theme","flexGrow","marginBottom","RecipesPage","Grid","container","spacing","item","xs","component","aria-label","map","HomeListItem","props","useState","isStrikeThrough","setStrikeThrough","style","textDecoration","grocery","formControl","marginLeft","marginTop","minWidth","HomePage","groceryIDs","e","getGroceryByID","sort","a","b","zone","otItem","AdminLinks","window","location","hostname","margin","to","IconButton","fontSize","top","accordion","display","OneTimeItem","React","oneTimeItem","setOneTimeItem","Accordion","expanded","expandedItem","AccordionSummary","AccordionDetails","TextField","variant","value","handleClick","Header","isExpanded","setExpanded","AppBar","Toolbar","AllItemsListItem","groceryItem","GROCERIES","AllItemsPage","AdminTablePage","lazy","CreateGroceryPage","CreateRecipePage","App","fallback","path","exact","render","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f5108860.chunk.js","sourcesContent":["export const loadStorage = (type) => {\r\n  //type 0 = grocery, 1 = recipe, 2 = onetime\r\n  if (type === 0) {\r\n    try {\r\n      const serializedState = localStorage.getItem('groceryList');\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  }\r\n  else if (type === 1 ){\r\n    try {\r\n      const serializedState = localStorage.getItem('recipeList');\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  }\r\n  else if (type === 2 ){\r\n    try {\r\n      const serializedState = localStorage.getItem('oneTimeList');\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  }\r\n}; \r\n\r\nexport const saveStorage = (state, type) => {\r\n  //type 0 = grocery, 1 = recipe, 2= oneTime\r\n  if (type === 0) {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('groceryList', serializedState);\r\n    } catch {\r\n      // ignore write errors\r\n    }\r\n  }\r\n  else if (type === 1 ){\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('recipeList', serializedState);\r\n    } catch {\r\n      // ignore write errors\r\n    }\r\n  }\r\n  else if (type === 2 ){\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('oneTimeList', serializedState);\r\n    } catch {\r\n      // ignore write errors\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nexport const clearStorage = () => {\r\n  localStorage.clear();\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadStorage } from './localStorage';\r\n\r\nconst stateFromLocalStorage = loadStorage(0);\r\n\r\nexport const groceryListSlice = createSlice({\r\n    name: 'groceryList',\r\n    initialState: stateFromLocalStorage !== undefined ? stateFromLocalStorage : [],\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        toggle: (state, action) => {\r\n            \r\n            if (action.payload.checked){\r\n                state.push(action.payload);\r\n            }\r\n            else {\r\n                return state.filter(({id}) => id !== action.payload.id);\r\n            }\r\n        },\r\n        add: (state, action) => {\r\n            state.push(action.payload);\r\n        },\r\n        remove: (state, action) => {\r\n            return state.filter(id => id !== action.payload);\r\n        },\r\n        removeAll: (state, action) => {\r\n            return action.payload;\r\n        }\r\n        //addRecipe: (state, )\r\n    }\r\n});\r\n\r\nexport const { add, remove, toggle, removeAll } = groceryListSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectGroceryList = (state) => state.groceryList;\r\n\r\nexport const selectGroceryById = (state, id) => state.groceryList.find(element => element === id);\r\n\r\nexport default groceryListSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadStorage } from './localStorage';\r\n\r\nconst stateFromLocalStorage = loadStorage(1);\r\n\r\nexport const recipeListSlice = createSlice({\r\n    name: 'recipeList',\r\n    initialState: stateFromLocalStorage !== undefined ? stateFromLocalStorage : [],\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        addRecipe: (state, action) => {\r\n            state.push(action.payload);\r\n        },\r\n        removeRecipe: (state, action) => {\r\n            return state.filter(id => id !== action.payload);\r\n        },\r\n        removeAllRecipes: (state, action) => {\r\n            return action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addRecipe, removeRecipe, removeAllRecipes } = recipeListSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectRecipeList = (state) => state.recipeList;\r\n\r\nexport const selectRecipeById = (state, id) => state.recipeList.find(element => element === id);\r\n\r\nexport default recipeListSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadStorage } from './localStorage';\r\n\r\nconst stateFromLocalStorage = loadStorage(2);\r\n\r\nexport const oneTimeListSlice = createSlice({\r\n    name: 'oneTimeList',\r\n    initialState: stateFromLocalStorage !== undefined ? stateFromLocalStorage : [],\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        addItem: (state, action) => {\r\n            state.push(action.payload);\r\n        },\r\n        removeItem: (state, action) => {\r\n            //no id - have to use name\r\n            return state.filter(id => id !== action.payload);\r\n        },\r\n        removeAllItems: (state, action) => {\r\n            //should this remove from localStorage?? maybe not - pure reducer\r\n            return action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addItem, removeItem, removeAllItems } = oneTimeListSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectOneTimeList = (state) => state.oneTimeList;\r\n\r\nexport const selectItemByName = (state, name) => state.oneTimeList.find(element => element === name);\r\n\r\nexport default oneTimeListSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport groceryListReducer from './groceryListSlice';\r\nimport recipeListReducer from './recipeListSlice';\r\nimport oneTimeListReducer from './oneTimeListSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n      groceryList: groceryListReducer,\r\n      recipeList: recipeListReducer,\r\n      oneTimeList: oneTimeListReducer\r\n    },\r\n  });","\r\nimport { Switch, ListItem, ListItemText } from '@material-ui/core';\r\nimport { add, remove, selectGroceryList } from \"../../app/groceryListSlice\";\r\nimport { addRecipe, removeRecipe, selectRecipeList } from '../../app/recipeListSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction RecipesListItem({ recipe }) {\r\n    const ID = recipe.id;\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(selectRecipeList);\r\n    const groceriesState = useSelector(selectGroceryList);\r\n    //console.dir(groceriesState);\r\n    const isChecked = state.find(id => id === ID) !== undefined ? true : false;\r\n    const handleChange = (event) => {\r\n        if (event.target.checked){\r\n            dispatch(addRecipe(recipe.id));\r\n            //add all grocery from the recipe to list ***except ones already present\r\n            recipe.items.forEach(gId => {\r\n                if (!groceriesState.find(g => g === gId)) {\r\n                    dispatch(add(gId));\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            dispatch(removeRecipe(recipe.id));\r\n            //remove all recipe items from the list\r\n            recipe.items.forEach(gId => {\r\n                dispatch(remove(gId));\r\n            });\r\n        }\r\n    }\r\n    return(\r\n        <ListItem key={ID} button>\r\n            <ListItemText primary={recipe.name} />\r\n            <Switch checked={isChecked} color=\"primary\" onChange={handleChange} />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nexport default RecipesListItem;","import allData from '../data.json';\r\n\r\nexport const getGroceries = () => allData[\"groceries\"];\r\nexport const getRecipies = () => allData[\"recipes\"];\r\n\r\nexport const getGroceryByID = (id) => getGroceries().find(e => e.id === id)\r\nexport const getRecipeByID = (id) => getRecipies().find(e => e.id === id)\r\n\r\nexport const getItemsFromRecipe = (id) => getRecipeByID(id).items;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectGroceryList, removeAll } from '../../app/groceryListSlice';\r\nimport { selectRecipeList, removeAllRecipes } from '../../app/recipeListSlice';\r\nimport { selectOneTimeList, removeAllItems } from '../../app/oneTimeListSlice';\r\nimport { saveStorage, clearStorage } from '../../app/localStorage'; \r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    color: '#fff',\r\n    background: '#3f51b5'\r\n  },\r\n});\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const groceryState = useSelector(selectGroceryList);\r\n  const recipeState = useSelector(selectRecipeList);\r\n  const oneTimeState = useSelector(selectOneTimeList);\r\n  \r\n  const handleSaveClick = () => {\r\n    saveStorage(groceryState, 0);\r\n    saveStorage(recipeState, 1);\r\n    saveStorage(oneTimeState,2)\r\n  }\r\n\r\n  const handleClearAllClick = () => {\r\n    dispatch(removeAll([]));\r\n    dispatch(removeAllRecipes([]));\r\n    dispatch(removeAllItems([]));\r\n    clearStorage();\r\n  }\r\n  return (\r\n    <BottomNavigation\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction onClick={handleSaveClick} label=\"Save\" icon={<SaveIcon />} />\r\n      <BottomNavigationAction onClick={handleClearAllClick} label=\"Clear All\" icon={<ClearIcon />} />\r\n    </BottomNavigation>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport RecipesListItem from './RecipesListItem';\r\nimport { getRecipies } from '../../app/appDataScripts';\r\nimport Footer from '../shared/Footer';\r\n\r\nconst RECIPES = getRecipies();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginBottom: 60\r\n    }\r\n  }));\r\n\r\n\r\nfunction RecipesPage(){\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n    <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12} component=\"nav\" aria-label=\"main mailbox folders\">\r\n                {RECIPES.map((item) => \r\n                    <RecipesListItem key={item.id} recipe={item}/>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n        <Footer />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default RecipesPage;","import React, { useState } from 'react';\r\nimport {ListItem, ListItemText } from '@material-ui/core';\r\n\r\nfunction HomeListItem(props) {\r\n\r\n    const [isStrikeThrough, setStrikeThrough] = useState(false);\r\n\r\n    function handleClick() {\r\n        isStrikeThrough ? setStrikeThrough(false) : setStrikeThrough(true);\r\n    }\r\n\r\n    return (\r\n    <ListItem style={{textDecoration : isStrikeThrough ? 'line-through' : 'none'}} onClick={handleClick} button>\r\n        <ListItemText primary={props.grocery.name !== undefined ? props.grocery.name : props.grocery} />\r\n    </ListItem>\r\n    );\r\n}\r\n\r\nexport default HomeListItem;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport HomeListItem from './HomeListItem';\r\nimport {getGroceryByID} from '../../app/appDataScripts';\r\nimport Footer from '../shared/Footer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginBottom: 60\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing(5),\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 200,\r\n      }\r\n  }));\r\nfunction HomePage(){\r\n    const classes = useStyles();\r\n\r\n    const groceryIDs = useSelector((state) => state.groceryList);\r\n    let groceryList = [];\r\n\r\n    groceryIDs.forEach(id => groceryList.push(getGroceryByID(id)));\r\n\r\n    groceryList.sort(function (a, b) {\r\n        return a.zone - b.zone;\r\n    });\r\n    const oneTimeList = useSelector((state) => state.oneTimeList);\r\n    return (\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n          <Grid item xs={12} component=\"nav\" aria-label=\"main mailbox folders\">\r\n            {\r\n              oneTimeList.map((otItem) =>\r\n              <HomeListItem grocery={otItem} key={otItem}/>\r\n              )\r\n            }\r\n            {\r\n              groceryList.map((item) => \r\n              <HomeListItem grocery={item} key={item.id}/>\r\n              )\r\n            }\r\n            </Grid>\r\n          </Grid>\r\n          <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import {Link} from 'react-router-dom';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\n\r\nfunction AdminLinks(){\r\n\r\n    const isLocalHost = window.location.hostname === \"localhost\";\r\n\r\n    if (isLocalHost){\r\n        return (\r\n            <div>\r\n                <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/admin\" >\r\n                    <IconButton aria-label=\"home\">\r\n                        <SettingsIcon style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/create\" >\r\n                    <IconButton aria-label=\"home\">\r\n                        <AddCircleIcon style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/createrecipe\" >\r\n                    <IconButton aria-label=\"home\">\r\n                        <BuildIcon style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\nexport default AdminLinks;","import * as React from 'react';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Accordion } from \"@material-ui/core\";\r\nimport { AccordionSummary } from \"@material-ui/core\";\r\nimport { AccordionDetails } from \"@material-ui/core\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addItem } from \"../../app/oneTimeListSlice\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        top: '75px',\r\n        width: '100%',\r\n        position: 'fixed'\r\n    },\r\n    accordion: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\nconst OneTimeItem = (props) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const [oneTimeItem, setOneTimeItem] = React.useState('');\r\n\r\n    const handleChange = (event) => {\r\n        setOneTimeItem(event.target.value);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        dispatch(addItem(oneTimeItem))\r\n        setOneTimeItem('');\r\n        props.handleClick();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Accordion expanded={props.expandedItem} >\r\n                <AccordionSummary className={classes.accordion} />\r\n                <AccordionDetails>\r\n                    <TextField id=\"standard-basic\" variant=\"standard\" onChange={handleChange} value={oneTimeItem} />\r\n                    <IconButton aria-label=\"add\" onClick={handleClick}>\r\n                        <AddCircleIcon />\r\n                    </IconButton>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OneTimeItem;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {Link} from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LocalGroceryStoreIcon from '@material-ui/icons/LocalGroceryStore';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\n\r\n\r\nimport AdminLinks from './AdminLinks';\r\nimport OneTimeItem from './OneTimeItem';\r\n\r\nexport default function Header() {\r\n\r\n  const [isExpanded, setExpanded] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    isExpanded ? setExpanded(false) : setExpanded(true);\r\n  };\r\n\r\n  \r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n          \r\n            <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/\">\r\n              <IconButton aria-label=\"home\">\r\n                <HomeIcon style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n            </Link>\r\n\r\n            <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/all\">\r\n              <IconButton aria-label=\"all-items\">\r\n                <LocalGroceryStoreIcon style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n            </Link>\r\n\r\n            <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/recipes\">\r\n              <IconButton aria-label=\"all-items\">\r\n                <RestaurantIcon style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n            </Link>\r\n\r\n              <IconButton aria-label=\"all-items\" onClick={handleClick}>\r\n                <FlashOnIcon style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n\r\n            <AdminLinks />\r\n          </Toolbar>\r\n\r\n          <OneTimeItem handleClick={handleClick} expandedItem={isExpanded} />\r\n        </AppBar>\r\n      <Toolbar />\r\n      </Grid>\r\n\r\n    </Grid>\r\n  );\r\n}","\r\nimport { Switch, ListItem, ListItemText } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//import { createSelector } from 'reselect' //https://redux.js.org/tutorials/fundamentals/part-5-ui-react\r\nimport { add, remove, selectGroceryList } from \"../../app/groceryListSlice\";\r\n\r\n\r\n\r\nfunction AllItemsListItem({ groceryItem }){\r\n    const ID = groceryItem.id;\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(selectGroceryList);\r\n    const isChecked = state.find(id => id === ID) !== undefined ? true : false;\r\n    const handleChange = (event) => {\r\n        if (event.target.checked){\r\n            dispatch(add(ID))\r\n        }\r\n        else {\r\n            dispatch(remove(ID));\r\n        }\r\n      };\r\n\r\n    return (\r\n        <ListItem key={ID} button>\r\n            <ListItemText primary={groceryItem.name} />\r\n            <Switch checked={isChecked} color=\"primary\" onChange={handleChange} />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nexport default AllItemsListItem;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport AllItemsListItem from './AllItemsListItem';\r\nimport {getGroceries} from '../../app/appDataScripts';\r\nimport Footer from '../shared/Footer';\r\nconst GROCERIES = getGroceries();\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginBottom: 60\r\n    }\r\n  }));\r\n\r\nfunction AllItemsPage() {\r\n  const classes = useStyles();\r\n  GROCERIES.sort(function (a, b) {\r\n    return a.zone - b.zone;\r\n  });\r\n  return (\r\n  <div className={classes.root}>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} component=\"nav\" aria-label=\"main mailbox folders\">\r\n        {\r\n          GROCERIES.map((item) => \r\n              <AllItemsListItem key={item.name} groceryItem={item} />\r\n          )\r\n        }\r\n        </Grid>\r\n    </Grid>\r\n    <Footer />\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default AllItemsPage;","//192.168.1.14:3000\r\n//import React, {useState}  from 'react';\r\nimport React, { Suspense, lazy } from 'react';\r\nimport 'fontsource-roboto';\r\nimport RecipesPage from \"./recipes/RecipesPage\";\r\nimport HomePage from './home/HomePage';\r\nimport Header from './shared/Header';\r\nimport AllItemsPage from \"./all-items/AllItemsPage\";\r\n\r\n//hash router for github pages\r\n//https://www.freecodecamp.org/news/deploy-a-react-app-to-github-pages/\r\n//https://github.com/gitname/react-gh-pages\r\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\r\n//import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n\r\n//lazy load admin stuff\r\nconst AdminTablePage = lazy(() => import('./admin/AdminTablePage'));\r\nconst CreateGroceryPage = lazy(() => import('./admin/CreateGroceryPage'));\r\nconst CreateRecipePage = lazy(() => import('./admin/CreateRecipePage'));\r\n\r\nfunction App(){\r\n    return (\r\n      <Router>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/admin\" component={AdminTablePage} />\r\n          <Route path=\"/create/:id\" component={CreateGroceryPage} />\r\n          <Route path=\"/create\" component={CreateGroceryPage} />\r\n          <Route path=\"/createrecipe\" component={CreateRecipePage} />\r\n          <Route exact path=\"/recipes\" render={() => <RecipesPage />} />\r\n          <Route exact path=\"/all\" render={() => <AllItemsPage  />} />\r\n          <Route path=\"/\" render={() => <HomePage />} />\r\n        </Switch>\r\n        </Suspense>\r\n      </Router>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/) ||\r\n    window.location.hostname === '192.168.1.5'\r\n);\r\n\r\nexport function register(config) {\r\n  //no serviceWorker if not https or true localhost\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n//redux\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store';\r\n//main componenet\r\nimport App from \"./components/App\";\r\n\r\n//global css\r\nimport './index.css';\r\n\r\n//PWA Stuff\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n//http://192.168.1.5:5000/ is not pwa - that is only on localhost\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}