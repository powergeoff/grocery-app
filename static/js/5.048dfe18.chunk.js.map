{"version":3,"sources":["api/apiUtils.js","api/groceriesApi.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","api/storeApi.js","components/admin/CreateGroceryPage.js"],"names":["handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","alert","baseUrl","getGroceries","fetch","then","catch","getGrocery","id","saveGrocery","item","method","headers","body","JSON","stringify","parseInt","checked","deleteGrocery","groceryId","createSvgIcon","React","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","SwitchBase","_extends","type","root","clsx","concat","capitalize","disabled","fontSize","undefined","withStyles","theme","palette","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","name","useStyles","makeStyles","flexGrow","checkBox","float","formControl","marginLeft","spacing","marginTop","minWidth","selectEmpty","CreateGroceryPage","match","params","useState","setItem","stores","setStores","handleInputChange","event","target","value","useEffect","groceryApi","data","length","className","Grid","container","xs","onSubmit","store","isStaple","zone","dir","autoComplete","TextField","label","variant","onChange","FormControl","InputLabel","htmlFor","Select","native","aria-label","map","option","Button"],"mappings":"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","file":"static/js/5.048dfe18.chunk.js","sourcesContent":["export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  alert(error)\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = 'http://localhost:3001/groceries/';\n\n\nexport function getGroceries() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getGrocery(id) {\n  return fetch(baseUrl + id)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\n\nexport function saveGrocery(item) {\n  return fetch(baseUrl + (item.id || \"\"), {\n    method: item.id === null ? \"POST\" : \"PUT\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...item,\n      // Parse authorId to a number (in case it was sent as a string).\n      id: parseInt(item.id, 10),\n      checked: false\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteGrocery(groceryId) {\n  return fetch(baseUrl + groceryId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = 'http://localhost:3001/stores/';\n\n\nexport function getStores() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getStore(id) {\n  return fetch(baseUrl + id)\n    .then(handleResponse)\n    .catch(handleError);\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Grid, Checkbox, Button, FormControl, Select, InputLabel} from '@material-ui/core';\nimport * as groceryApi from \"../../api/groceriesApi\";\nimport * as storeApi from \"../../api/storeApi\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    checkBox: {\n        float: 'right'\n    },\n    formControl: {\n        marginLeft: theme.spacing(5),\n        marginTop: theme.spacing(2),\n        //margin: theme.spacing(2),\n        minWidth: 200,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n  }));\n\nfunction CreateGroceryPage(props){\n    const classes = useStyles();\n\n    const id = props.match.params.id ? parseInt(props.match.params.id) : null;\n    const [item, setItem] = useState({});\n    const [stores, setStores] = useState([]);\n    \n    useEffect(() => {\n        if (id !== null) {\n            groceryApi.getGrocery(id).then(data => setItem(data));\n        }\n        if (!stores.length) {\n            storeApi.getStores().then(data => setStores(data));\n        }\n        \n    }, [setItem, id, stores, setStores]);\n\n    function handleSubmit() {\n        \n        const data = {\n            \"id\": id,\n            \"name\": item.name,\n            \"store\": item.store == null ? 0 : parseInt(item.store),\n            \"isStaple\": item.isStaple,\n            \"zone\": parseInt(item.zone)\n        };\n        groceryApi.saveGrocery(data).then(data => {\n            console.dir(data); \n        });\n    }\n\n    function handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        setItem({...item, [name]: value});\n    }\n\n    return (\n    <div className={classes.root}>\n        <Grid container spacing={3}>\n        <Grid item xs={12}><h2 className={classes.formControl}>{id !== null ? \"Edit \" : \"New \"}Item</h2>\n        </Grid>\n        <form onSubmit={handleSubmit} autoComplete=\"off\" >\n        \n            <Grid item xs={12}>\n                <TextField className={classes.formControl} label=\"Name\" variant=\"outlined\" name=\"name\" onChange={handleInputChange} value={item.name === undefined ? \"\" : item.name} />\n            </Grid>\n\n            <Grid item xs={12}>\n                <FormControl className={classes.formControl} variant=\"outlined\" >\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">Store</InputLabel>\n                    <Select\n                    native\n                    value={item.store === undefined ? \"\" : item.store}\n                    onChange={handleInputChange}\n                    label=\"Store\"\n                    inputProps={{\n                        name: 'store',\n                        id: 'outlined-age-native-simple',\n                    }}\n                    >\n                    <option aria-label=\"None\" value=\"\" />\n                    {stores.map((option) => (\n                        <option key={option.id} value={option.id}>\n                        {option.name}\n                        </option>\n                    ))}\n                    </Select>\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={12}>\n                <TextField className={classes.formControl} label=\"Zone\" variant=\"outlined\" name=\"zone\" onChange={handleInputChange} value={item.zone === undefined ? \"\" : item.zone} />\n            </Grid>\n\n            <Grid item xs={12}>      \n                <FormControl className={classes.formControl} variant=\"outlined\" >\n                    <div>\n                        Is Staple:\n                    <Checkbox color=\"primary\" checked={item.isStaple === undefined ? false : item.isStaple} onChange={handleInputChange} name=\"isStaple\" />\n                    </div>\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={12}>\n                <FormControl className={classes.formControl} variant=\"outlined\" >\n                    <Button type=\"submit\" value=\"Submit\" variant=\"contained\" color=\"primary\" >Submit</Button>\n                </FormControl>\n            </Grid>\n        \n    </form>\n    </Grid>\n    </div>\n    );\n}\n\nexport default CreateGroceryPage;"],"sourceRoot":""}