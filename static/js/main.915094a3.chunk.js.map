{"version":3,"sources":["app/localStorage.js","app/groceryListSlice.js","app/recipeListSlice.js","app/store.js","components/recipes/RecipesListItem.js","app/appDataScripts.js","components/shared/Footer.js","components/recipes/RecipesPage.js","components/home/HomeListItem.js","components/home/HomePage.js","components/shared/AdminLinks.js","components/shared/Header.js","components/all-items/AllItemsListItem.js","components/all-items/AllItemsPage.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["loadStorage","type","serializedState","localStorage","getItem","JSON","parse","err","saveStorage","state","stringify","setItem","stateFromLocalStorage","groceryListSlice","createSlice","name","initialState","undefined","reducers","toggle","action","payload","checked","filter","id","push","add","remove","removeAll","actions","selectGroceryList","groceryList","recipeListSlice","addRecipe","removeRecipe","removeAllRecipes","selectRecipeList","recipeList","store","configureStore","reducer","groceryListReducer","recipeListReducer","RecipesListItem","recipe","ID","dispatch","useDispatch","isChecked","useSelector","find","ListItem","button","ListItemText","primary","Switch","color","onChange","event","target","items","forEach","gId","getGroceries","allData","getRecipies","useStyles","makeStyles","root","width","position","bottom","background","Footer","classes","groceryState","recipeState","BottomNavigation","showLabels","className","BottomNavigationAction","onClick","label","icon","clear","RECIPES","theme","flexGrow","marginBottom","RecipesPage","Grid","container","spacing","item","xs","component","aria-label","map","HomeListItem","props","useState","isStrikeThrough","setStrikeThrough","style","textDecoration","grocery","formControl","marginLeft","marginTop","minWidth","HomePage","groceryIDs","e","getGroceryByID","sort","a","b","zone","AdminLinks","window","location","hostname","margin","to","IconButton","fontSize","Header","AppBar","Toolbar","AllItemsListItem","groceryItem","GROCERIES","AllItemsPage","AdminTablePage","lazy","CreateGroceryPage","CreateRecipePage","App","fallback","path","exact","render","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.915094a3.chunk.js","sourcesContent":["export const loadStorage = (type) => {\n  //type 0 = grocery, 1 = recipe\n  if (type === 0) {\n    try {\n      const serializedState = localStorage.getItem('groceryList');\n      if (serializedState === null) {\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      return undefined;\n    }\n  }\n  else {\n    try {\n      const serializedState = localStorage.getItem('recipeList');\n      if (serializedState === null) {\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      return undefined;\n    }\n  }\n  \n}; \n\nexport const saveStorage = (state, type) => {\n  //type 0 = grocery, 1 = recipe\n  if (type === 0) {\n    try {\n      const serializedState = JSON.stringify(state);\n      localStorage.setItem('groceryList', serializedState);\n    } catch {\n      // ignore write errors\n    }\n  }\n  else {\n    try {\n      const serializedState = JSON.stringify(state);\n      localStorage.setItem('recipeList', serializedState);\n    } catch {\n      // ignore write errors\n    }\n  }\n  \n};\n\nexport const clearStorage = () => {\n  localStorage.clear();\n}","import { createSlice } from '@reduxjs/toolkit';\nimport { loadStorage } from './localStorage';\n\nconst stateFromLocalStorage = loadStorage(0);\n\nexport const groceryListSlice = createSlice({\n    name: 'groceryList',\n    initialState: stateFromLocalStorage !== undefined ? stateFromLocalStorage : [],\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n        toggle: (state, action) => {\n            \n            if (action.payload.checked){\n                state.push(action.payload);\n            }\n            else {\n                return state.filter(({id}) => id !== action.payload.id);\n            }\n        },\n        add: (state, action) => {\n            state.push(action.payload);\n        },\n        remove: (state, action) => {\n            return state.filter(id => id !== action.payload);\n        },\n        removeAll: (state, action) => {\n            return action.payload;\n        }\n        //addRecipe: (state, )\n    }\n});\n\nexport const { add, remove, toggle, removeAll } = groceryListSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectGroceryList = (state) => state.groceryList;\n\nexport const selectGroceryById = (state, id) => state.groceryList.find(element => element === id);\n\nexport default groceryListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { loadStorage } from './localStorage';\n\nconst stateFromLocalStorage = loadStorage(1);\n\nexport const recipeListSlice = createSlice({\n    name: 'recipeList',\n    initialState: stateFromLocalStorage !== undefined ? stateFromLocalStorage : [],\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n        addRecipe: (state, action) => {\n            state.push(action.payload);\n        },\n        removeRecipe: (state, action) => {\n            return state.filter(id => id !== action.payload);\n        },\n        removeAllRecipes: (state, action) => {\n            return action.payload;\n        }\n    }\n});\n\nexport const { addRecipe, removeRecipe, removeAllRecipes } = recipeListSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectRecipeList = (state) => state.recipeList;\n\nexport const selectRecipeById = (state, id) => state.recipeList.find(element => element === id);\n\nexport default recipeListSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport groceryListReducer from './groceryListSlice';\nimport recipeListReducer from './recipeListSlice';\n\nexport const store = configureStore({\n    reducer: {\n      groceryList: groceryListReducer,\n      recipeList: recipeListReducer\n    },\n  });","\nimport { Switch, ListItem, ListItemText } from '@material-ui/core';\nimport { add, remove } from \"../../app/groceryListSlice\";\nimport { addRecipe, removeRecipe, selectRecipeList } from '../../app/recipeListSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction RecipesListItem({ recipe }) {\n    const ID = recipe.id;\n    const dispatch = useDispatch();\n    const state = useSelector(selectRecipeList);\n    const isChecked = state.find(id => id === ID) !== undefined ? true : false;\n    const handleChange = (event) => {\n        if (event.target.checked){\n            dispatch(addRecipe(recipe.id));\n            //add all grocery from the recipe to list\n            recipe.items.forEach(gId => {\n                dispatch(add(gId));\n            });\n        }\n        else {\n            dispatch(removeRecipe(recipe.id));\n            //remove all recipe items from the list\n            recipe.items.forEach(gId => {\n                dispatch(remove(gId));\n            });\n        }\n    }\n    return(\n        <ListItem key={ID} button>\n            <ListItemText primary={recipe.name} />\n            <Switch checked={isChecked} color=\"primary\" onChange={handleChange} />\n        </ListItem>\n    );\n}\n\nexport default RecipesListItem;","import allData from '../data.json';\n\nexport const getGroceries = () => allData[\"groceries\"];\nexport const getRecipies = () => allData[\"recipes\"];\n\nexport const getGroceryByID = (id) => getGroceries().find(e => e.id === id)\nexport const getRecipeByID = (id) => getRecipies().find(e => e.id === id)\n\nexport const getItemsFromRecipe = (id) => getRecipeByID(id).items;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectGroceryList, removeAll } from '../../app/groceryListSlice';\nimport { selectRecipeList, removeAllRecipes } from '../../app/recipeListSlice';\nimport { saveStorage, clearStorage } from '../../app/localStorage'; \n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    position: 'fixed',\n    bottom: 0,\n    color: '#fff',\n    background: '#3f51b5'\n  },\n});\n\nexport default function Footer() {\n  const classes = useStyles();\n\n\n  const dispatch = useDispatch();\n  const groceryState = useSelector(selectGroceryList);\n  const recipeState = useSelector(selectRecipeList);\n  \n  const handleSaveClick = () => {\n    saveStorage(groceryState, 0);\n    saveStorage(recipeState, 1)\n  }\n\n  const handleClearAllClick = () => {\n    dispatch(removeAll([]));\n    dispatch(removeAllRecipes([]));\n    clearStorage();\n  }\n  return (\n    <BottomNavigation\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction onClick={handleSaveClick} label=\"Save\" icon={<SaveIcon />} />\n      <BottomNavigationAction onClick={handleClearAllClick} label=\"Clear All\" icon={<ClearIcon />} />\n    </BottomNavigation>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport RecipesListItem from './RecipesListItem';\nimport { getRecipies } from '../../app/appDataScripts';\nimport Footer from '../shared/Footer';\n\nconst RECIPES = getRecipies();\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      marginBottom: 60\n    }\n  }));\n\n\nfunction RecipesPage(){\n\n    const classes = useStyles();\n\n    return (\n    <div className={classes.root}>\n        <Grid container spacing={3}>\n            <Grid item xs={12} component=\"nav\" aria-label=\"main mailbox folders\">\n                {RECIPES.map((item) => \n                    <RecipesListItem key={item.id} recipe={item}/>\n                )}\n            </Grid>\n        </Grid>\n        <Footer />\n    </div>\n    );\n}\n\nexport default RecipesPage;","import React, { useState } from 'react';\nimport {ListItem, ListItemText } from '@material-ui/core';\n\nfunction HomeListItem(props) {\n\n    const [isStrikeThrough, setStrikeThrough] = useState(false);\n\n    function handleClick() {\n        isStrikeThrough ? setStrikeThrough(false) : setStrikeThrough(true);\n    }\n\n    return (\n    <ListItem style={{textDecoration : isStrikeThrough ? 'line-through' : 'none'}} onClick={handleClick} button>\n        <ListItemText primary={props.grocery.name} />\n    </ListItem>\n    );\n}\n\nexport default HomeListItem;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport HomeListItem from './HomeListItem';\nimport {getGroceryByID} from '../../app/appDataScripts';\nimport Footer from '../shared/Footer';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      marginBottom: 60\n    },\n    formControl: {\n        marginLeft: theme.spacing(5),\n        marginTop: theme.spacing(2),\n        minWidth: 200,\n      }\n  }));\nfunction HomePage(){\n    const classes = useStyles();\n\n    const groceryIDs = useSelector((state) => state.groceryList);\n    let groceryList = [];\n\n    groceryIDs.forEach(id => groceryList.push(getGroceryByID(id)));\n\n    groceryList.sort(function (a, b) {\n        return a.zone - b.zone;\n    });\n\n    return (\n        <div className={classes.root}>\n          <Grid container spacing={3}>\n          <Grid item xs={12} component=\"nav\" aria-label=\"main mailbox folders\">\n            {\n              groceryList.map((item) => \n              <HomeListItem grocery={item} key={item.id}/>\n              )\n            }\n            </Grid>\n          </Grid>\n          <Footer />\n        </div>\n    );\n}\n\nexport default HomePage;","import {Link} from 'react-router-dom';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport BuildIcon from '@material-ui/icons/Build';\n\nfunction AdminLinks(){\n\n    const isLocalHost = window.location.hostname === \"localhost\";\n\n    if (isLocalHost){\n        return (\n            <div>\n                <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/admin\" >\n                    <IconButton aria-label=\"home\">\n                        <SettingsIcon style={{ fontSize: 40 }} />\n                    </IconButton>\n                </Link>\n\n                <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/create\" >\n                    <IconButton aria-label=\"home\">\n                        <AddCircleIcon style={{ fontSize: 40 }} />\n                    </IconButton>\n                </Link>\n\n                <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/createrecipe\" >\n                    <IconButton aria-label=\"home\">\n                        <BuildIcon style={{ fontSize: 40 }} />\n                    </IconButton>\n                </Link>\n            </div>\n        );\n    }\n    else {\n        return (<div></div>);\n    }\n}\n\nexport default AdminLinks;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {Link} from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport AdminLinks from './AdminLinks';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport LocalGroceryStoreIcon from '@material-ui/icons/LocalGroceryStore';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\n\n\n\nexport default function Header() {\n  \n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n        \n          <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/\">\n            <IconButton aria-label=\"home\">\n              <HomeIcon style={{ fontSize: 40 }} />\n            </IconButton>\n          </Link>\n\n          <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/all\">\n            <IconButton aria-label=\"all-items\">\n              <LocalGroceryStoreIcon style={{ fontSize: 40 }} />\n            </IconButton>\n          </Link>\n\n          <Link style={{textDecoration : 'none', margin: '5px'}} to=\"/recipes\">\n            <IconButton aria-label=\"all-items\">\n              <RestaurantIcon style={{ fontSize: 40 }} />\n            </IconButton>\n          </Link>\n\n          <AdminLinks />\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n      </Grid>\n    </Grid>\n  );\n}","\nimport { Switch, ListItem, ListItemText } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\n//import { createSelector } from 'reselect' //https://redux.js.org/tutorials/fundamentals/part-5-ui-react\nimport { add, remove, selectGroceryList } from \"../../app/groceryListSlice\";\n\n\n\nfunction AllItemsListItem({ groceryItem }){\n    const ID = groceryItem.id;\n    const dispatch = useDispatch();\n    const state = useSelector(selectGroceryList);\n    const isChecked = state.find(id => id === ID) !== undefined ? true : false;\n    const handleChange = (event) => {\n        if (event.target.checked){\n            dispatch(add(ID))\n        }\n        else {\n            dispatch(remove(ID));\n        }\n      };\n\n    return (\n        <ListItem key={ID} button>\n            <ListItemText primary={groceryItem.name} />\n            <Switch checked={isChecked} color=\"primary\" onChange={handleChange} />\n        </ListItem>\n    );\n}\n\nexport default AllItemsListItem;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport AllItemsListItem from './AllItemsListItem';\nimport {getGroceries} from '../../app/appDataScripts';\nimport Footer from '../shared/Footer';\nconst GROCERIES = getGroceries();\n\n\nconst useStyles = makeStyles(() => ({\n    root: {\n      flexGrow: 1,\n      marginBottom: 60\n    }\n  }));\n\nfunction AllItemsPage() {\n  const classes = useStyles();\n  GROCERIES.sort(function (a, b) {\n    return a.zone - b.zone;\n  });\n  return (\n  <div className={classes.root}>\n    <Grid container spacing={3}>\n      <Grid item xs={12} component=\"nav\" aria-label=\"main mailbox folders\">\n        {\n          GROCERIES.map((item) => \n              <AllItemsListItem key={item.name} groceryItem={item} />\n          )\n        }\n        </Grid>\n    </Grid>\n    <Footer />\n  </div>\n  );\n}\n\nexport default AllItemsPage;","//192.168.1.14:3000\n//import React, {useState}  from 'react';\nimport React, { Suspense, lazy } from 'react';\nimport 'fontsource-roboto';\nimport RecipesPage from \"./recipes/RecipesPage\";\nimport HomePage from './home/HomePage';\nimport Header from './shared/Header';\nimport AllItemsPage from \"./all-items/AllItemsPage\";\n\n//hash router for github pages\n//https://www.freecodecamp.org/news/deploy-a-react-app-to-github-pages/\n//https://github.com/gitname/react-gh-pages\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\n//import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\n//lazy load admin stuff\nconst AdminTablePage = lazy(() => import('./admin/AdminTablePage'));\nconst CreateGroceryPage = lazy(() => import('./admin/CreateGroceryPage'));\nconst CreateRecipePage = lazy(() => import('./admin/CreateRecipePage'));\n\nfunction App(){\n    return (\n      <Router>\n        <Suspense fallback={<div>Loading...</div>}>\n        <Header />\n        <Switch>\n          <Route path=\"/admin\" component={AdminTablePage} />\n          <Route path=\"/create/:id\" component={CreateGroceryPage} />\n          <Route path=\"/create\" component={CreateGroceryPage} />\n          <Route path=\"/createrecipe\" component={CreateRecipePage} />\n          <Route exact path=\"/recipes\" render={() => <RecipesPage />} />\n          <Route exact path=\"/all\" render={() => <AllItemsPage  />} />\n          <Route path=\"/\" render={() => <HomePage />} />\n        </Switch>\n        </Suspense>\n      </Router>\n    )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/) ||\n    window.location.hostname === '192.168.1.5'\n);\n\nexport function register(config) {\n  //no serviceWorker if not https or true localhost\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n//redux\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\n//main componenet\nimport App from \"./components/App\";\n\n//global css\nimport './index.css';\n\n//PWA Stuff\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//http://192.168.1.5:5000/ is not pwa - that is only on localhost\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}